#include <Servo.h>
#include <IRremote.h>

const int motionSensorPin = 4;
const int rollServoPin = 5;
const int builtInLEDPin = 13;
const int irReceiverPin = 2;  

const int rollSpeed = 0;
const int stopPosition = 90;
const int rollDuration = 5000;

Servo rollServo;
IRrecv irrecv(irReceiverPin);
decode_results results;

bool motionPaused = false;  // Flag to control motion detection

// Replace these with the actual IR codes from your remote
const unsigned long OK_BUTTON_CODE = 0xFF38C7;  // Example: OK button
const unsigned long HASH_BUTTON_CODE = 0xFFB04F; // Example: # button

void setup() {
  Serial.begin(9600);
  pinMode(motionSensorPin, INPUT);
  pinMode(builtInLEDPin, OUTPUT);
  digitalWrite(builtInLEDPin, LOW);
 rollServo.attach(rollServoPin);
  rollServo.write(stopPosition);

  irrecv.enableIRIn();  // Start the IR receiver

  Serial.println("System Ready - Waiting for motion...");
}

void loop() {
  // Check for IR remote input
  if (irrecv.decode(&results)) {
    Serial.print("IR Code Received: ");
    Serial.println(results.value, HEX);

    if (results.value == OK_BUTTON_CODE) {
      motionPaused = true;
      Serial.println("Motion detection PAUSED.");
    } else if (results.value == HASH_BUTTON_CODE) {
      motionPaused = false;
      Serial.println("Motion detection RESUMED.");
    }

    irrecv.resume();  // Receive the next value
  }

  // Skip motion detection if paused
if (motionPaused) {
    delay(100);
    return;
  }

  // Motion detection logic
  int motionCount = 0;
  const int motionThreshold = 5;
  for (int i = 0; i < motionThreshold; i++) {
    if (digitalRead(motionSensorPin) == HIGH) {
      motionCount++;
    }
    delay(10);
  }

  if (motionCount >= motionThreshold) {
    Serial.println("Confirmed motion detected!");
    delay(10); 
    rollServo.write(rollSpeed);
    delay(rollDuration);
    rollServo.write(stopPosition);
    Serial.println("Servo reset. Waiting for next motion...");
  }

  delay(10); 
}
